@use './colors' as colors;
@use './mixins' as mixins;

.btn {
    text-decoration: none;
    text-align: center;
    display: inline-block;

    outline: 0;

    min-width: var(--btn-min-width, 5.1875rem);
    width: var(--btn-width, fit-content);
    max-width: var(--btn-max-width, 100%);

    padding-block: var(--btn-padding-block, 0.625rem);
    padding-inline: var(--btn-padding-inline, 1.125rem);

    border-color: var(--btn-border-color, transparent);
    border-style: var(--btn-border-style, solid);
    border-width: var(--btn-border-width, 1px);
    border-radius: var(--btn-border-radius, 6px);

    background: var(--btn-background, transparent);
    color: var(--btn-color);

    transition: all 400ms ease;

    cursor: pointer;

    &:has(.icon) {
        display: inline-flex;
        gap: 0.75rem;
        justify-content: center;

        .icon {
            width: var(--btn-icon-size, 1.5rem);
            height: var(--btn-icon-size, 1.5rem);

            overflow: hidden;
            text-indent: 200%;
        }
    }

    .icon.key-ico {
        background-image: url('/images/icons/key.svg');
    }

    .icon.play-ico {
        background-image: url('/images/icons/play-circle.svg');
    }

    &-lg {
        width: 19.375rem;
        height: 3.375rem;
        --btn-border-radius: 5px;
    }

    &-md {
        // width: 15.875rem;
        // height: 3.625rem;        
        --btn-padding-block: .7rem;
        --btn-padding-inline: 4rem;

    }

    &-primary {
        background-color: colors.$primary;
        color: colors.$white-accent;

        &-outline {
            color: colors.$primary;
            --btn-border-color: colors.$primary;
            
            &:hover {
                --btn-border-color: colors.$primary;
                color: colors.$white;
                background-color: colors.$primary;
                
            }
        }
    }
}


.mx {
    &-auto {
        display: block;
        margin-inline:auto
    }
}

.my {
    &-auto {
        // display: block;
        margin-inline:auto
    }

    &-1 {
        margin-block: 1rem;
    }
    &-2 {
        margin-block: 2rem;
    }
}

.mt {
    &-auto {
        // display: block;
        margin-inline:auto
    }

    &-1 {
        margin-top: 1rem;
    }
    &-2 {
        margin-top: 2rem;
    }
}

.cta {
    display: flex;
    gap: 1.75rem;
    flex-direction: column;

    @include mixins.least-large-screen {
        flex-direction: row;
    }
}


.btn {
    &:disabled {
        opacity: .6;
    }
}


/* CSS for the skeleton loader */
.voter-card-container {
    max-width: 90vw;

    width: 40rem;

    min-height: 28rem;
    // height: 26rem;


    border-radius: 12px;
    background-color: #f0f0f0;
    // padding: 2rem 0rem;
    padding-block: 4rem 2.5rem;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    
    display: flex;
    flex-direction: column;
    align-items: center;

    justify-content: center;
    
    row-gap: 1rem;
    
    position: relative;


    &::before {
        content: attr(data-label);
        /* Set the label based on data attribute */
        position: absolute;
        top: 2rem;
        right: -2rem;
        transform: translate(-50%, -50%);
        /* Center the label */
        font-size: .8rem;
        letter-spacing: .3rem;
        color: colors.$primary;;
        font-weight: bold;

        border: 1px solid colors.$primary;
        padding: .5rem .9rem;
        border-radius: 4rem;

    }

    &:has(input[data-checked="true"]) {
        outline: 1px solid colors.$primary;
        outline-offset: 4px;
        box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);

        background-color: #160a3623;
    }


    &:first-of-type {
        margin-left: 1.5rem;
    }

    &:last-of-type {
        margin-right: 1.5rem;
    }


    height: max-content;


    // @include mixins.least-large-screen {
    //     height: 30rem;
    // }
}

.avatar-wrapper-container {

    &[data-multiple="true"] {
        display: grid;
        
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
        /* Style applied only if there's more than 1 item */
        .avatar-wrapper {
            --size: 100px;

            &[data-maintain="true"] {
                --size: 120px;
            }
        }
    }

}

.avatar-wrapper {

    --size: 200px;
    width: var(--size);
    height: var(--size);

    flex: 1 1 var(--size);

    background-color: #e0e0e0;
    border-radius: 2rem;
    position: relative;
    overflow: hidden;
    margin-bottom: 20px;


    img {
        width: 100%;
        height: auto;

        object-fit: cover;
        object-position: 70% 40%;
    }
}

.voter-card-name,
.voter-card-info {
    width: 80%;

    text-align: center;
    
    margin-top: 10px;
    
    position: relative;

    &:has(.shimmer) {
        height: 20px;
        background-color: #e0e0e0;
        border-radius: 4px;
        overflow: hidden;
    }

    // p {
    //     font-size: 2rem;
    // }
}

.voter-card-button {
    width: 50%;
    height: 40px;
    
    
    position: relative;
    
    margin-top: auto;

    

    button {
        

        --transition: all 500ms ease;
        transition: var(--transition);
        width: 100%;
        // height: 100%;

        border-radius: 5rem;

        padding-block: 1rem;

        position: relative;

        display: flex;
        align-items: center;
        justify-content: center;

        font-size: 1.4rem;
        font-weight: bold;


        background-color: transparent;
        border-color: colors.$primary;

        cursor: pointer;

        // margin-top: 1rem;



        &::after {
            transition: var(--transition);
            content: '';
            background-image: url('/icons/check-circle.svg');
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;

            width: 2rem;
            aspect-ratio: 1;

            position: relative;

            right: -1rem;
        }
    }


    input {
        width: 0rem;
        height: 0rem;

        position: absolute;

        &[data-checked="true"] ~ button {
            
            background-color: colors.$primary !important;
            color: colors.$white;
            
            &::after {
                background-image: url('/icons/check-badge.svg');
            }
        }
    }


    &:has(.shimmer) {
        background-color: #e0e0e0;
        border-radius: 20px;
        overflow: hidden;
    }
}

.shimmer {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0) 100%);
    animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
    0% {
        left: -100%;
    }

    100% {
        left: 100%;
    }
}


/* CSS for the actual vote card */
.vote-card {
    width: 100%;
    max-width: 320px;
    height: 400px;
    border-radius: 12px;
    background-color: #fff;
    padding: 20px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.avatar {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    margin-bottom: 20px;
}

.name {
    font-size: 1.25rem;
    font-weight: bold;
}

.info {
    font-size: 1rem;
    color: #777;
    margin-top: 10px;
}

.vote-button {
    margin-top: auto;
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 20px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.vote-button:hover {
    background-color: #0056b3;
}


.auth-indicator-wrapper {
    position: fixed;
    top: 0;
    right: 0rem;
    left: 0rem;

    width: 100%;

    
    z-index: 10;
    
    // background-color: red;
    background-color: colors.$white;

    h1 {
        width: 90%;
        margin-inline: auto;
        white-space: nowrap;
        /* Prevent the text from wrapping to a new line */
        overflow: hidden;
        /* Hide any text that goes beyond the container */
        text-overflow: ellipsis;
        /* Add ellipsis (...) at the end of the text */
    }
}